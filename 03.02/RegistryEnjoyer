using System;
using Microsoft.Win32;
internal class Program
{
    private static void Main(string[] args)
    {
        CreateTestBranch();
    }

    public static void CreateTestBranch()
    {
        RegistryKey brachSoftware = Registry.CurrentUser.OpenSubKey("Software", true);

        RegistryKey newSubKey = brachSoftware.CreateSubKey("MyRegistryTest");

        newSubKey.SetValue("", "Это тестовый ключ");
        newSubKey.SetValue("TestString", "Hello, World!", RegistryValueKind.String);
        newSubKey.SetValue("TestInt", 42, RegistryValueKind.DWord);
        
        Console.WriteLine($"Value in branch {newSubKey.Name}:");

        Console.WriteLine($"Value default {(string)(newSubKey.GetValue("") != null ? newSubKey.GetValue("") : "нет указанного значения")}");        
        Console.WriteLine($"Value TestString {(string)(newSubKey.GetValue("TestString") != null ? newSubKey.GetValue("TestString") : "нет указанного значения")}");
        Console.WriteLine($"Value TestInt {(newSubKey.GetValue("TestInt") != null ? newSubKey.GetValue("TestInt") : "нет указанного значения").ToString()}");

        newSubKey.SetValue("TestString", "Измененное значение", RegistryValueKind.String);
        newSubKey.SetValue("TestInt", 100, RegistryValueKind.DWord);

        Console.WriteLine($"Value in branch {newSubKey.Name}:");

        Console.WriteLine($"Value TestString {(string)(newSubKey.GetValue("TestString") != null ? newSubKey.GetValue("TestString") : "нет указанного значения")}");
        Console.WriteLine($"Value TestInt {(newSubKey.GetValue("TestInt") != null ? newSubKey.GetValue("TestInt") : "нет указанного значения").ToString()}");

        newSubKey.DeleteValue("TestString");

        Console.WriteLine($"Value TestString after delete {(string)(newSubKey.GetValue("TestString") != null ? newSubKey.GetValue("TestString") : "нет указанного значения")}");

        newSubKey.Close();

        // Удаление
        Registry.CurrentUser.DeleteSubKey("Software\\MyRegistryTest");





    }

}
