класс MemoryDemo:
функционал:
Поле для хранения массива строк
Конструктор, который принимает размер массива и инициализирует его
Индексатор для доступа к элементам массива с проверкой границ
Метод Add, который добавляет строку в массив (если не превышен лимит)
Метод Remove, который удаляет строку по индексу (сдвигает элементы)

Main:
В этом методе протестируйте ваш класс MemoryDemo:
Создайте экземпляр класса с размером 5
Добавьте несколько строк в массив
Выведите содержимое массива на экран
Удалите один элемент и снова выведите массив

Добавьте код для анализа работы сборщика мусора:
Создайте метод, который создает большое количество объектов MemoryDemo и вызывает сборщик мусора
Измерьте время выполнения создания объектов до и после вызова сборщика мусора

Создайте класс UnsafeDemo:
Реализуйте класс, который использует указатели для работы с массивом целых чисел
Напишите методы для добавления и получения значений из массива с использованием указателей
В методе Main создайте экземпляр UnsafeDemo, заполните его данными и выведите их на экран

Теория для выполнения:
сборщик мусора
GC.Collect(): Запускает сборщик мусора, принудительно инициируя сбор неиспользуемых объектов.
GC.WaitForPendingFinalizers(): Ожидает завершения всех финализаторов, которые были запущены до вызова этого метода.
GC.GetTotalMemory(bool forceFullCollection): Возвращает общее количество памяти, используемой в управляемом куче. Если forceFullCollection равно true, вызывается полный сборщик мусора перед возвратом значения.
GC.SuppressFinalize(object obj): Указывает сборщику мусора, что не следует вызывать финализатор для указанного объекта.

unsafe

fixed: Используется для закрепления объекта в памяти, чтобы предотвратить его перемещение сборщиком мусора во время работы с указателями.
исключения

IndexOutOfRangeException: Вызывается при попытке доступа к элементу массива по недопустимому индексу.
InvalidOperationException: Вызывается при попытке выполнить операцию, которая недопустима для текущего состояния объекта.